apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: prometheus
spec:
  interval: 30m
  url: https://prometheus-community.github.io/helm-charts

---

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: prometheus
spec:
  chart:
    spec:
      chart: prometheus
      version: "14.1.2"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: prometheus
  interval: 5m
  install:
    remediation:
      retries: 3
  values:
    installCRDs: true
    serviceAccounts:
      server:
        name: "prometheus"
        create: false
        annotations:
          eks.amazonaws.com/role-arn: arn:aws:iam::<dev-aws-account-id>:role/prometheus_remote_ingest   
    server:
      statefulSet:
        enabled: "true" 
      remoteWrite:
        - url: https://aps-workspaces.eu-west-1.amazonaws.com/workspaces/<prometheus-workspace-id>/api/v1/remote_write
          queue_config:
            max_samples_per_send: 1000
            max_shards: 200
            capacity: 2500
          sigv4:
            region: eu-west-1
            role_arn: arn:aws:iam::<management-aws-account-id>:role/prometheus_central_ingest
    pushgateway:
      enabled: false
    alertmanagerFiles:
      alertmanager.yml:
        global:
          resolve_timeout: 1m
          slack_api_url: '<slack api URL and code>'

        route:
          receiver: 'slack-notifications'

        receivers:
          - name: 'slack-notifications'
            slack_configs:
              - channel: '#my-slack-channel'
                send_resolved: true
                icon_url: https://avatars3.githubusercontent.com/u/3380462
                title: |-
                  [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}
                  {{- if gt (len .CommonLabels) (len .GroupLabels) -}}
                    {{" "}}(
                    {{- with .CommonLabels.Remove .GroupLabels.Names }}
                      {{- range $index, $label := .SortedPairs -}}
                        {{ if $index }}, {{ end }}
                        {{- $label.Name }}="{{ $label.Value -}}"
                      {{- end }}
                    {{- end -}}
                    )
                  {{- end }}
                text: >-
                  {{ range .Alerts -}}
                  *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}

                  *Description:* {{ .Annotations.description }}

                  *Details:*
                    {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                    {{ end }}
                  {{ end }}
    serverFiles:
      ## Alerts configuration
      ## Ref: https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/
      alerting_rules.yml:
        groups:
          - name: Test
            rules:
              - alert: TEST ALERT FROM PROMETHEUS PLEASE ACKNOWLEDGE
                expr: prometheus_build_info{instance="localhost:9090"} == 1
                for: 10s
                labels:
                  cluster: TEST
                  severity: warning
                annotations:
                  action: TESTING PLEASE ACKNOWLEDGE, NO FURTHER ACTION REQUIRED ONLY A TEST
                  description: TEST ALERT FROM {{ $labels.instance }}
